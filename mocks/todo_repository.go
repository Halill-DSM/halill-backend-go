// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	ent "halill/ent"

	mock "github.com/stretchr/testify/mock"
)

// TodoRepository is an autogenerated mock type for the TodoRepository type
type TodoRepository struct {
	mock.Mock
}

// Complete provides a mock function with given fields: _a0
func (_m *TodoRepository) Complete(_a0 int64) (*ent.Todo, error) {
	ret := _m.Called(_a0)

	var r0 *ent.Todo
	if rf, ok := ret.Get(0).(func(int64) *ent.Todo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ent.Todo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Create provides a mock function with given fields: _a0
func (_m *TodoRepository) Create(_a0 *ent.Todo) (*ent.Todo, error) {
	ret := _m.Called(_a0)

	var r0 *ent.Todo
	if rf, ok := ret.Get(0).(func(*ent.Todo) *ent.Todo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ent.Todo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ent.Todo) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: _a0
func (_m *TodoRepository) Delete(_a0 int64) (*ent.Todo, error) {
	ret := _m.Called(_a0)

	var r0 *ent.Todo
	if rf, ok := ret.Get(0).(func(int64) *ent.Todo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ent.Todo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0
func (_m *TodoRepository) Get(_a0 int64) (*ent.Todo, error) {
	ret := _m.Called(_a0)

	var r0 *ent.Todo
	if rf, ok := ret.Get(0).(func(int64) *ent.Todo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ent.Todo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAllByEmail provides a mock function with given fields: _a0
func (_m *TodoRepository) GetAllByEmail(_a0 string) ([]*ent.Todo, error) {
	ret := _m.Called(_a0)

	var r0 []*ent.Todo
	if rf, ok := ret.Get(0).(func(string) []*ent.Todo); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*ent.Todo)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
